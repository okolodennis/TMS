@model WebApp.Areas.Admin.ViewModels.UserVM
<div class="modal fade" id="Create" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Create User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("CreateUser", "User", FormMethod.Post, new { area = "Admin", @class = "validate", novalidate = true }))
            {
                @Html.AntiForgeryToken()
        <div class="modal-body">
            <div class="form-group col-md-12">
                <label for="socialGitHub">First name</label>
                <div class="input-group input-group-seamless">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <i class="material-icons">bloodtype</i>
                        </div>
                    </div>
                    @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter first name", required = true } })
                    <div class="invalid-feedback">
                        First name required
                    </div>
                </div>
            </div>
            <div class="form-group col-md-12">
                <label for="socialGitHub">Last name</label>
                <div class="input-group input-group-seamless">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <i class="material-icons">bloodtype</i>
                        </div>
                    </div>
                    @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter last name", required = true } })
                    <div class="invalid-feedback">
                        Last name required
                    </div>
                </div>
            </div>
            <div class="form-group col-md-12">
                <label for="socialGitHub">Email address</label>
                <div class="input-group input-group-seamless">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <i class="material-icons">bloodtype</i>
                        </div>
                    </div>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control input-mask-trigger", placeholder = "Enter email address", required = true, pattern = "[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$", data_inputmask = "'alias': 'email'", im_insert = "true" } })
                    <div class="invalid-feedback">
                        Email required
                    </div>
                </div>
            </div>
            <div class="form-group col-md-12">
                <label for="socialGitHub">Phone number</label>
                <div class="input-group input-group-seamless">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <i class="material-icons">bloodtype</i>
                        </div>
                    </div>
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Phone number", required = true } })
                    <div class="invalid-feedback">
                        Phone number required
                    </div>
                </div>
            </div>
            <div class="form-group col-md-12">
                <label for="socialGitHub">Contact address</label>
                <div class="input-group input-group-seamless">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <i class="material-icons">bloodtype</i>
                        </div>
                    </div>
                    @Html.TextAreaFor(model => model.Address, 0, 3, new { @class = "form-control", placeholder = "Enter address", required = true })
                    <div class="invalid-feedback">
                        Contact address required
                    </div>
                </div>
            </div>
            <div class="divider"></div>
            <div class="form-group col-md-12">
                <label for="socialGitHub">Username</label>
                <div class="input-group input-group-seamless">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <i class="material-icons">bloodtype</i>
                        </div>
                    </div>
                    @Html.EditorFor(model => model.Username1, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Username", onkeyup = "checkIfUsernameExist()", required = true } })
                    <div class="invalid-feedback">
                        Username required
                    </div>
                </div>
                <div style="margin-top: 7px;" id="UserNameExit"></div>
            </div>
            <div class="form-group col-md-12">
                <label for="socialGitHub">Role</label>
                <div class="input-group input-group-seamless">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <i class="material-icons">bloodtype</i>
                        </div>
                    </div>
                    @Html.DropDownListFor(model => model.RoleID, (IEnumerable<SelectListItem>)ViewBag.Roles, "-- Select role --", new { @class = "form-control", required = true })
                    <div class="invalid-feedback">
                        Role required
                    </div>
                </div>
            </div>
            <div class="form-group col-md-12">
                <label for="socialGitHub">Create Shift Number</label>
                <div class="input-group input-group-seamless">
                 
                    @Html.CheckBoxFor(model => model.IsCreateShift)

                </div>
            </div>
            <div class="form-group col-md-12">
                <label for="socialGitHub">Password</label>
                <div class="input-group input-group-seamless">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <i class="material-icons">bloodtype</i>
                        </div>
                    </div>
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", name = "Password", placeholder = "Enter password", required = true })
                    <div class="invalid-feedback">
                        Password required
                    </div>
                </div>
            </div>
            <div class="form-group col-md-12">
                <label for="socialGitHub">Repeat password</label>
                <div class="input-group input-group-seamless">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <i class="material-icons">bloodtype</i>
                        </div>
                    </div>
                    @Html.PasswordFor(model => model.PasswordSalt, new { @class = "form-control", onkeyup = "validatePassword()", placeholder = "Re-enter password", required = true })
                    <div class="invalid-feedback">
                        Password don't match
                    </div>
                </div>
                <div style="margin-top: 7px;" id="CheckPasswordMatch"></div>
            </div>
        </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnSubmit" class="ladda-button btn btn-shadow btn-primary" data-style="zoom-in">
                        <span class="ladda-label">Create</span>
                        <span class="ladda-spinner"></span>
                    </button>
                </div>
            }
        </div>
    </div>
</div>
